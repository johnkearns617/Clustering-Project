View(dataset_1889)
library(haven)
dataset_1899 <- read_dta("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Analysis/1899/dataset_1899.dta")
View(dataset_1899)
dataset_1889 = dataset_1899 %>%  mutate(agri=sum(c(agr,fish),na.rm=TRUE)/total,region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
library(dplyr)
dataset_1889 = dataset_1899 %>%  mutate(agri=sum(c(agr,fish),na.rm=TRUE)/total,region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1899 = dataset_1899 %>%  mutate(agri=sum(c(agr,fish),na.rm=TRUE)/total,region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
library(haven)
dataset_1889 <- read_dta("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Analysis/1889/dataset_1889.dta")
View(dataset_1889)
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(nXVII,nXVIII),na.rm=TRUE)/sum(c(nI:NXXV),na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(nXVII,nXVIII),na.rm=TRUE)/sum(c(nI:nXXV),na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(nXVII,nXVIII),na.rm=TRUE)/sum(nI:nXXV,na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(as.numeric(nXVII),as.nnumeric(nXVIII),na.rm=TRUE)/sum(as.numeric(nI:nXXV),na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
)
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(as.numeric(nXVII),as.numeric(nXVIII)),na.rm=TRUE)/sum(as.numeric(nI:nXXV),na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(as.numeric(nXVII),as.numeric(nXVIII)),na.rm=TRUE)/sum(as.numeric(vars(nI:nXXV)),na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(agri=sum(c(as.numeric(nXVII),as.numeric(nXVIII)),na.rm=TRUE)/sum(vars(nI:nXXV),na.rm=TRUE),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(total=sum(vars(nI:nXXV),na.rm=TRUE),agri=sum(c(as.numeric(nXVII),as.numeric(nXVIII)),na.rm=TRUE)/total,region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>%  mutate(total=sum(nI:nXXV,na.rm=TRUE),agri=sum(c(as.numeric(nXVII),as.numeric(nXVIII)),na.rm=TRUE)/total,region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
dataset_1889 = dataset_1889 %>% mutate(total=sum(nI:nXXXV),na.rm=TRUE)
dataset_1889 = dataset_1889 %>% mutate_at(vars(nI:nXXXV),as.numeric)
dataset_1889 = dataset_1889 %>% mutate_at(vars(nI:nXXXV),total=sum,na.rm=TRUE)
dataset_1889 = dataset_1889 %>% mutate_at(vars(nI:nXXXV),sum,na.rm=TRUE)
View(dataset_1889)
library(haven)
dataset_1889 <- read_dta("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Analysis/1889/dataset_1889.dta")
View(dataset_1889)
dataset_1889 = dataset_1889 %>% mutate_at(vars(nI:nXXXV),as.numeric)
View(dataset_1889)
sum(dataset_1889[,c("nI":"nXXXV")])
62-35
sum(dataset_1889[,27:62])
sum(dataset_1889[,27:62],na.rm=TRUE)
class(dataset_1889$nXXXII)
dataset_1899 = dataset_1899 %>%  mutate(agri=sum(c(agr,fish),na.rm=TRUE)/total,region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
View(dataset_1899)
dataset_1899 = dataset_1899 %>%  mutate(agri=sum(c(as.numeric(agr),as.numeric(fish)),na.rm=TRUE)/as.numeric(total),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
View(dataset_1899)
dataset_1899 = dataset_1899 %>%  mutate(num=sum(c(as.numeric(agr),as.numeric(fish)),na.rm=TRUE)/as.numeric(total),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
View(dataset_1899)
class(dataset_1899$agr)
dataset_1899 = dataset_1899 %>% rowwise() %>%   mutate(num=sum(c(as.numeric(agr),as.numeric(fish)),na.rm=TRUE)/as.numeric(total),region=ifelse(provincie%in%c("Limburg","Noordbrabant"),1,0))
View(dataset_1899)
summary(lm(num~region,data=dataset_1899))
load("~/2020/AEI/Steve/Covid Impact/Files/CovidImpact.RData")
View("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")
View(readLines("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32"))
lines = readLines("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")
lines = lines[lines!=""]
View(lines)
lines[2018]
lines[1018]
lines = lines[lines!="\t"]
library(rvest)
read_html("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32") %>%
html_nodes("div class") %>%
html_text()
lines[1465]
lines[1466]
lines[1467]
lines[1468]
lines[1469]
lines[1470]
lines[1472]
library(XML)
View(readHTMLTable("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32"))
library(RCurl)
library(XML)
# Download page using RCurl
# You may need to set proxy details, etc.,  in the call to getURL
theurl <- "https://amazingrace.fandom.com/wiki/The_Amazing_Race_32"
webpage <- getURL(theurl)
# Process escape characters
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
getURL(theurl)
webpage <- readLines(tc <- textConnection("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")); close(tc)
webpage <- readLines(tc <- textConnection(url("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32"))); close(tc)
webpage <- readLines(tc <- textConnection(url("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")); close(tc)
webpage <- readLines(tc <- textConnection(url("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")))
close(tc)
webpage <- readLines("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")
pagetree <- htmlTreeParse(webpage, error=function(...){})
View(pagetree)
body <- pagetree$children$html$children$body
divbodyContent <- body$children$div$children[[1]]$children$div$children[[4]]
tables <- divbodyContent$children[names(divbodyContent)=="table"]
View(body)
View(pagetree)
lines[1466]
lines[1467]
lines[1468]
read_html("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")%>% html_nodes("tbody") %>%
html_text()
tables = read_html("https://amazingrace.fandom.com/wiki/The_Amazing_Race_32")%>% html_nodes("tbody") %>%
html_text()
tables[1]
load("~/2020/AEI/Steve/Covid Impact/Files/CovidImpact.RData")
View(gp14)
View(gp8)
View(gp12)
View(gp13)
View(mobility3)
View(gp2)
??readOGR()
library(rgdal)
View(readOGR("C:/Users/16094/Documents/2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Balance/elevation.kml"))
library(sf)
View(st_read("C:/Users/16094/Documents/2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Balance/elevation.kml"))
View(st_read("C:/Users/16094/Documents/2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Balance/elevation/ahn_units.shp"))
View(st_read("C:/Users/16094/Documents/2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/Balance/elevation/ahn_units.shp"))
load("~/2020/NBN/Model/NoBidNationModel/model.RData")
library(rsconnect)
deployApp('~/2020/NBN/Model/NoBidNationModel')
library(readr)
deaths <- read_delim("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/openarch_deaths_oct2020_v2.csv",
";", escape_double = FALSE, trim_ws = TRUE,nrows=2000)
deaths <- read.csv("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/openarch_deaths_oct2020_v2.csv",
";", escape_double = FALSE, trim_ws = TRUE,nrows=2000)
deaths <- read.csv("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/openarch_deaths_oct2020_v2.csv",
";",nrows=2000)
deaths = read.csv("2020/AEI/Veuger/Dutch Revolt/Data/GIS Data/openarch_deaths_oct2020_v2.csv",sep=";",nrows=2000)
View(deaths)
summary(deaths$event_year)
load("~/2020/AEI/Steve/Covid Impact/Files/covidimpact_addingDecemberData.RData")
View(gdp_q_df)
table(gdp_q_df$Date)
table(gdp_q_df$Date[!is.na(gdp_q_df$rgdp_qoq)])
length(gp33$`Country/Region`[gp33$Date=="2020-07-01"&!is.na(gp33$indprod_mompchange)])
length(gp33$`Country/Region`[gp33$Date=="2020-11-01"&!is.na(gp33$indprod_mompchange)])
length(gp33$`Country/Region`[gp33$Date=="2020-12-01"&!is.na(gp33$indprod_mompchange)])
length(gp33$`Country/Region`[gp33$Date=="2020-10-01"&!is.na(gp33$indprod_mompchange)])
length(gp33$`Country/Region`[gp33$Date=="2020-09-01"&!is.na(gp33$indprod_mompchange)])
getnum = subset(dropNAthreshold(gp32,5,"m",NULL),Date>"2020-02-01")
library(tidyverse)
getnum = subset(dropNAthreshold(gp32,5,"m",NULL),Date>"2020-02-01")
length(unique(getnum$`Country/Region`))
length(unique(edeaths_df$`Country/Region`))
library(data.table)
library(tidyverse)
library(bigballR)
games = data.frame()
for(id in teamids$ID[teamids$Season=="2020-21"][1:2]){
sched_team <- tryCatch(
get_team_schedule(id,season="2020-21"),
error=function(e) e
)
if(inherits(sched_team, "error")) next
games = rbindlist(games,sched_team)
}
games = data.frame()
for(id in teamids$ID[teamids$Season=="2020-21"][1:2]){
sched_team <- tryCatch(
get_team_schedule(id,season="2020-21"),
error=function(e) e
)
if(inherits(sched_team, "error")) next
games = rbindlist(list(games,sched_team))
}
View(games)
games = data.frame()
for(id in teamids$ID[teamids$Season=="2020-21"]){
sched_team <- tryCatch(
get_team_schedule(id,season="2020-21"),
error=function(e) e
)
if(inherits(sched_team, "error")) next
games = rbindlist(list(games,sched_team))
}
games_vec = unique(games$Game_ID)
pbp_df = data.frame()
for(game in games_vec){
pbp_game <- tryCatch(
get_play_by_play(game),
error=function(e) e
)
if(inherits(pbp_game, "error")) next
pbp_df = rbindlist(list(pbp_df,pbp_game))
print(id)
}
pbp_df1 = data.frame()
for(game in unique(pbp_df$ID)){
dirty_game = pbp_df %>% filter(ID==game)
home_team = unique(dirty_game$Home)
away_team = unique(dirty_game$Away)
poss_num <- 0
nrows <- 0
for(i in 1:max(dirty_game$Half_Status)) {
half_data <- dplyr::filter(dirty_game, Half_Status == i)
poss_team <- dplyr::first(half_data$Event_Team[!half_data$Event_Type %in% c("Leaves Game", "Enters Game")])
other_team <- ifelse(poss_team == home_team, away_team, home_team)
poss_switch = F
poss_num <- poss_num + 1
for(j in 1:nrow(half_data)) {
# If row has event that ends possession, increment num and swap team
team <- half_data$Event_Team[j]
type <- half_data$Event_Type[j]
result <- half_data$Event_Result[j]
seconds <- half_data$Game_Seconds[j]
# Using max(j-1, 1) to handle first entry
swap <- poss_switch & seconds != half_data$Game_Seconds[max(j-1, 1)]
if(swap) {
poss_num <- poss_num + 1
tmp <- poss_team
poss_team <- other_team
other_team <- tmp
poss_switch <- F
}
# force switch possession if event is attributed to wrong possession team, if parse is false this puts it back to correct
# revisit - might be a more efficient way
if (!is.na(result) & team != poss_team | type == "Turnover" & poss_team != team) {
poss_num <- poss_num + 1 - swap*1
tmp <- poss_team
poss_team <- other_team
other_team <- tmp
poss_switch <- F
}
and_one <- any(half_data$Event_Type[half_data$Game_Seconds == seconds] == "Free Throw") # Detect and-one to not switch possession on the made shot
next_reb <-half_data$Event_Type[j+1] %in% c("Defensive Rebound", "Free Throw") # Catch final free throw misses -- note free throw sequences are occassionally out of order in pbp
if(
type %in% c("Defensive Rebound", "Turnover") |
(type %in% c("Two Point Jumper", "Three Point Jumper", "Layup", "Dunk", "Tip In", "Hook") & result == "made" & !and_one) |
(type == "Free Throw" & result == "made" & !next_reb)
) {
# Free throw made + current or next time does not include a defensive rebound
poss_switch = T
}
dirty_game$Poss_Num[j+nrows] <- poss_num
dirty_game$Poss_Team[j+nrows] <- poss_team
}
nrows <- nrows + nrow(half_data)
}
pbp_df1 = rbindlist(list(pbp_df1,dirty_game))
}
first_last = bind_rows(pbp_df1 %>% rename(team=Home,opponent=Away,team_score=Home_Score,opp_score=Away_Score),pbp_df1 %>% rename(team=Away,opponent=Home,team_score=Away_Score,opp_score=Home_Score))
first_last1 = first_last %>%
filter(Poss_Team==team) %>%
group_by(ID,team) %>%
mutate(poss_rank = dense_rank(Poss_Num))
save.image("~/2020/NBN/Rankings Article/post-mortem/pm.RData")
first_last1 = first_last1 %>%
group_by(team,ID) %>%
filter(abs(Game_Seconds - 300) == min(abs(Game_Seconds - 300))|
abs(Game_Seconds - 600) == min(abs(Game_Seconds - 600))|
abs(Game_Seconds - 900) == min(abs(Game_Seconds - 900))|
abs(Game_Seconds - 1200) == min(abs(Game_Seconds - 1200))|
abs(Game_Seconds - 1500) == min(abs(Game_Seconds - 1500))|
abs(Game_Seconds - 1800) == min(abs(Game_Seconds - 1800))|
abs(Game_Seconds - 2100) == min(abs(Game_Seconds - 2100))|
abs(Game_Seconds - 2400) == min(abs(Game_Seconds - 2400))) %>%
group_by(ID,Game_Seconds) %>%
slice(1)
View(first_last1)
View(head(first_last1,50))
class(first_last1$Game_Seconds)
first_last1$Game_Seconds
first_last1$Game_Seconds = as.numeric(first_last1$Game_Seconds)
first_last1 = first_last1 %>%
group_by(team,ID) %>%
filter(abs(Game_Seconds - 300) == min(abs(Game_Seconds - 300))|
abs(Game_Seconds - 600) == min(abs(Game_Seconds - 600))|
abs(Game_Seconds - 900) == min(abs(Game_Seconds - 900))|
abs(Game_Seconds - 1200) == min(abs(Game_Seconds - 1200))|
abs(Game_Seconds - 1500) == min(abs(Game_Seconds - 1500))|
abs(Game_Seconds - 1800) == min(abs(Game_Seconds - 1800))|
abs(Game_Seconds - 2100) == min(abs(Game_Seconds - 2100))|
abs(Game_Seconds - 2400) == min(abs(Game_Seconds - 2400))) %>%
group_by(ID,Game_Seconds) %>%
slice(1)
View(head(first_last1,50))
View(first_last1 %>% filter(team=="William & Mary"))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
PF_period = sum(team_score,-1*dplyr::lag(team_score),na.rm=TRUE),
PA_period = sum(opp_score,-1*dplyr::lag(opp_score),na.rm=TRUE),
poss_period = sum(poss_rank,-1*dplyr::lag(poss_rank),na.rm=TRUE),
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
ppp_period = PF_period/poss_rank)
View(first_last1 %>% filter(team=="William & Mary"))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
rowwise() %>%
mutate(score_diff=team_score-opp_score,
PF_period = sum(team_score,-1*dplyr::lag(team_score),na.rm=TRUE),
PA_period = sum(opp_score,-1*dplyr::lag(opp_score),na.rm=TRUE),
poss_period = sum(poss_rank,-1*dplyr::lag(poss_rank),na.rm=TRUE),
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
ppp_period = PF_period/poss_rank)
View(first_last1 %>% filter(team=="William & Mary"))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank) %>%
rowwise() %>%
mutate(PF_period = sum(team_score,-1*dplyr::lag(team_score),na.rm=TRUE),
PA_period = sum(opp_score,-1*dplyr::lag(opp_score),na.rm=TRUE),
poss_period = sum(poss_rank,-1*dplyr::lag(poss_rank),na.rm=TRUE),
ppp_period = PF_period/poss_rank)
View(first_last1 %>% filter(team=="William & Mary"))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
PF_period = diff(team_score),
PA_period = diff(away_score),
poss_period = diff(poss_rank),
ppp_period = PF_period/poss_rank)
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
PF_period = c(NA,diff(team_score)),
PA_period = c(NA,diff(away_score)),
poss_period = c(NA,diff(poss_rank)),
ppp_period = PF_period/poss_rank)
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
PF_period = c(NA,diff(team_score)),
PA_period = c(NA,diff(opp_score)),
poss_period = c(NA,diff(poss_rank)),
ppp_period = PF_period/poss_rank)
View(first_last1 %>% filter(team=="William & Mary"))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
PF_period = c(NA,diff(team_score)),
PA_period = c(NA,diff(opp_score)),
poss_period = c(NA,diff(poss_rank)),
ppp_period = PF_period/poss_period)
View(first_last1 %>% filter(team=="William & Mary"))
first_last1 = first_last1 %>%
mutate(PF_period=ifelse(Game_Seconds<550,team_score,PF_period),
PA_period=ifelse(Game_Seconds<550,opp_score,PA_period),
poss_period=ifelse(Game_Seconds<550,poss_rank,poss_period),
ppp_period=ifelse(Game_Seconds<550,ppp,ppp_period))
View(first_last1 %>% filter(team=="William & Mary"))
caa = first_last1 %>% filter(team%in%c("William & Mary","Elon","Northeastern","Hofstra","Drexel","UNCW","Delaware","James Madison","Towson","Col. of Charleston"))
caa %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
View(first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution = first_last1 %>% group_by(ID,team) %>% slice(1) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
View(distribution)
distribution = first_last1 %>% group_by(ID,team) %>% slice(1) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
View(distribution)
quantile(distribution$num,.25)
quantile(distribution$num,.20)
.20*271
.20*471
distribution_caa = caa %>% group_by(ID,team) %>% slice(1) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
View(distribution_caa)
library(ncaahoopR)
distribution_caa = caa %>% group_by(ID,team) %>% slice(2) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(1:2) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(2) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(1:2) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(3:4) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(3:4) %>% group_by(team) %>%  summarize(num=mean(ppp,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(3:4) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(5:6) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
distribution_caa = caa %>% group_by(ID,team) %>% slice(7:8) %>% group_by(team) %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
caa %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(5:8) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
caa %>% group_by(ID,team) %>% slice(1:2) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1:2) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% group_by(ID,team) %>% slice(1:2) %>% ungroup() %>%  summarize(num=mean(ppp_period,na.rm=TRUE),stdev=sd(ppp,na.rm=TRUE)/sqrt(length(ppp)))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(opp_score,na.rm=TRUE),stdev=sd(opp_score,na.rm=TRUE))
first_last1 %>%  group_by(ID,team) %>% slice(1) %>% ungroup() %>%  summarize(num=mean(opp_score,na.rm=TRUE),stdev=sd(opp_score,na.rm=TRUE))
first_last1 %>%  group_by(ID,team) %>% slice(2) %>% ungroup() %>%  summarize(num=mean(opp_score,na.rm=TRUE),stdev=sd(opp_score,na.rm=TRUE))
first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(2) %>% ungroup() %>%  summarize(num=mean(opp_score,na.rm=TRUE),stdev=sd(opp_score,na.rm=TRUE))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
PF_period = c(NA,diff(team_score)),
PA_period = c(NA,diff(opp_score)),
poss_period = c(NA,diff(poss_rank)),
ppp_period = PF_period/poss_period,
final_score_diff=max(team_score)-max(opp_score),
win=ifelse(finalscore<=0,0,1))
first_last1 = first_last1 %>%
group_by(ID,team) %>%
mutate(score_diff=team_score-opp_score,
perc_score = team_score/max(team_score),
ppp=team_score/poss_rank,
PF_period = c(NA,diff(team_score)),
PA_period = c(NA,diff(opp_score)),
poss_period = c(NA,diff(poss_rank)),
ppp_period = PF_period/poss_period,
final_score_diff=max(team_score)-max(opp_score),
win=ifelse(final_score_diff<=0,0,1))
first_last1 = first_last1 %>%
mutate(PF_period=ifelse(Game_Seconds<550,team_score,PF_period),
PA_period=ifelse(Game_Seconds<550,opp_score,PA_period),
poss_period=ifelse(Game_Seconds<550,poss_rank,poss_period),
ppp_period=ifelse(Game_Seconds<550,ppp,ppp_period))
View(first_last1 %>% filter(team=="William & Mary") %>% group_by(ID,team) %>% slice(1))
first_last1 %>% group_by(id,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5) %>% summarize(num=mean(win,na.rm=TRUE))
first_last1 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5) %>% summarize(num=mean(win,na.rm=TRUE))
first_last1 %>% group_by(ID,team) %>% slice(2) %>% ungroup() %>% filter(score_diff<=-10) %>% summarize(num=mean(win,na.rm=TRUE))
hist(distribution$num)
hist(distribution$num*100)
hist(distribution$num*100,nbins=200)
?hist()
hist(distribution$num*100,breaks=200)
hist(distribution$num*100,breaks=150)
hist(distribution$num*100,breaks=100)
save.image("~/2020/NBN/Rankings Article/post-mortem/pm.RData")
load("~/2020/NBN/Model/NoBidNationModel/model.RData")
setdiff(first_last1$team,power_rankings$team)
first_last2 = inner_join(first_last1,power_rankings %>% select(team,yusag_coeff),by="team")
View(first_last2 %>% filter(team=="William & Mary"))
first_last2 = left_join(first_last2,power_rankings %>% select(team,yusag_coeff),by=c("opponent"="team"))
colnames(first_last2)[ncol(first_last2)] = "opp_strength"
first_last1 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5&abs(team_strength-opp_strength)<2) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5&abs(team_strength-opp_strength)<2) %>% summarize(num=mean(win,na.rm=TRUE))
View(first_last2)
first_last2 = inner_join(first_last1,power_rankings %>% select(team,yusag_coeff),by="team")
colnames(first_last2)[ncol(first_last2)] = "team_strength"
first_last2 = left_join(first_last2,power_rankings %>% select(team,yusag_coeff),by=c("opponent"="team"))
colnames(first_last2)[ncol(first_last2)] = "opp_strength"
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5&abs(team_strength-opp_strength)<2) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(2) %>% ungroup() %>% filter(score_diff<=-10&abs(team_strength-opp_strength)<2) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(2) %>% ungroup() %>% filter(score_diff<=-10&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE))
View(first_last2 %>% group_by(ID,team) %>% slice(2) %>% ungroup() %>% filter(score_diff<=-10&abs(team_strength-opp_strength)<1))
View(first_last2 %>% filter(ID==4983044))
View(first_last2 %>% group_by(ID,team) %>% slice(7) %>% ungroup() %>% filter(score_diff<=-10&abs(team_strength-opp_strength)<1))
first_last2 %>% group_by(ID,team) %>% slice(7) %>% ungroup() %>% filter(score_diff<=-10&abs(team_strength-opp_strength)<2) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==0&abs(team_strength-opp_strength)<2) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==0&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==0&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE),sample=N())
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==0&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE),sample=n())
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==abs(1&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE),sample=n())
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==abs(1)&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE),sample=n())
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(abs(score_diff)==1&abs(team_strength-opp_strength)<1) %>% summarize(num=mean(win,na.rm=TRUE),sample=n())
View(first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(abs(score_diff)==1&abs(team_strength-opp_strength)<1))
View(first_last2 %>% group_by(ID,team) %>% slice(8) %>% ungroup() %>% filter(score_diff<-2&abs(team_strength-opp_strength)<1))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<-2) %>% summarize(num=mean(win,na.rm=TRUE,sample=n()))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-2) %>% summarize(num=mean(win,na.rm=TRUE,sample=n()))
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff<=-5) %>% summarize(num=mean(win,na.rm=TRUE,sample=n()))
first_last2 %>% group_by(ID,team) %>% slice(8) %>% ungroup() %>% filter(score_diff<=-5) %>% summarize(num=mean(win,na.rm=TRUE,sample=n()))
first_last2 %>% group_by(ID,team) %>% slice(8) %>% ungroup() %>% filter(score_diff<=-5) %>% summarize(num=mean(win,na.rm=TRUE,sample=n()))
first_last2 %>% group_by(ID,team) %>% slice(8) %>% ungroup() %>% filter(score_diff<=-5) %>% summarize(num=mean(win,na.rm=TRUE),sample=n())
first_last2 %>% group_by(ID,team) %>% slice(1) %>% ungroup() %>% filter(score_diff==0) %>% summarize(num=mean(win,na.rm=TRUE),sample=n())
View(power_rankings)
11100-10000
1100/20
623259/55
623259/55/60/60
load("~/2020/AEI/Steve/Covid Impact/PIIE_Vaccines_Project/Data/data_20210323.RData")
View(gdp_q_df)
2084
20*4
library(dplyr)
View(gdp_q_df %>% group_by(country) %>% summarize(num=n()))
OSI = read.csv("https://raw.githubusercontent.com/OxCGRT/covid-policy-tracker/master/data/timeseries/stringency_index.csv")
View(OSI)
OSI1 = OSI[,-c(1,4:24)] %>%
gather(Date,OSI,"X22Jan2020":colnames(OSI)[ncol(OSI)]) %>%
mutate(Date = as.Date(gsub("X","",Date),"%d%b%Y"))
colnames(OSI1)[2] = "Country/Region"
library(tidyverse)
OSI1 = OSI[,-c(1,4:24)] %>%
gather(Date,OSI,"X22Jan2020":colnames(OSI)[ncol(OSI)]) %>%
mutate(Date = as.Date(gsub("X","",Date),"%d%b%Y"))
colnames(OSI1)[2] = "Country/Region"
View(OSI1)
OSI1  = OSI1 %>% arrange(country_code)
write.csv(OSI1,"osi_file_20210331.csv")
solve(x^3-4*x^2-16*x+48)
load("~/2021/NBN/Clustering Project/Cluster_Analysis.RData")
View(recruits)
recruits = cluster_info1 %>%
filter(key %in% transfers$key)
library(tidyverse)
library(readr)
source("~/Functions/Mode1.R")
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(NbClust)
library(kableExtra)
# set wd
setwd("~/2021/NBN/Clustering Project")
recruits = cluster_info1 %>%
filter(key %in% transfers$key)
View(recruits)
cluster_info <- data.frame(cluster_data_all,
cluster = as.factor(pam7$cluster)
)
cluster_info1 = left_join(cluster_info %>%
mutate(key=paste0(player_name,"_",team)),
transfers %>% select(key,rating),by="key")
recruits = cluster_info1 %>%
filter(key %in% transfers$key)
View(recruits)
